version: "3.3"

services:
  api:
    container_name: booking-api
    build:
      context: ./docker
    volumes:
      - ./backend:/var/www/app
    links:
      - db
    depends_on:
      - db
    environment:
      - APP_NAME=Lumen
      - APP_ENV=local
      - APP_KEY=123456
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - APP_TIMEZONE=UTC
      - LOG_CHANNEL=stack
      - LOG_SLACK_WEBHOOK_URL=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=ivao
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - CACHE_DRIVER=file
      - QUEUE_CONNECTION=sync
  db:
    container_name: booking-db
    image: mariadb
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=ivao
      - MYSQL_USER=root
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - ./docker/mysql:/var/lib/mysql
  phpmyadmin:
    container_name: booking-phpmyadmin
    image: phpmyadmin
    ports:
      - 8080:80
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=secret
    depends_on:
      - db
  admin:
    container_name: booking-admin
    image: node:14
    environment:
      - REACT_APP_API_HOST=http://dev.ivao.aero/api
      - REACT_APP_DEV=true
      - REACT_APP_LOGO_URL=https://assets.br.ivao.aero/logos/tag_white.png
      - WDS_SOCKET_PATH=/admin/sockjs-node
    working_dir: /app
    volumes:
      - ./fronts:/app
    command: sh -c "yarn && yarn start:admin"
    depends_on:
      - api
    networks:
      - default
  front:
    container_name: booking-front
    image: node:14
    environment:
      - REACT_APP_API_HOST=http://dev.ivao.aero/api
      - REACT_APP_DEV=true
      - REACT_APP_LOGO_URL=https://assets.br.ivao.aero/logos/tag_white.png
      - WDS_SOCKET_PATH=/admin/sockjs-node
    working_dir: /app
    volumes:
      - ./fronts:/app
    command: sh -c "yarn && yarn start:front"
    depends_on:
      - api
    networks:
      - default
  nginx:
    container_name: booking-nginx
    image: nginx
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - api
      - front
      - admin

networks:
    default:
        driver: "bridge"